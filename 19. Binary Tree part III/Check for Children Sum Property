//Striver code 
//1. Going down check the sum of left and right child at each node.
    a. If sum>= root.data, then incr root value to sum
    b. If sum< root.data, then incr either left or right child value equal to root.value.
//2. While coming back, sum up left and right and assign it to the Root.
        // NOTE : in case of leaf node, do not update it.
 
==>TC = O(N)  
==>SC = O(N)- aux stack space

public class Solution {
    public static void changeTree(BinaryTreeNode < Integer > root) {
        if(root == null) return;
        
        //1. Going down check the sum of left and right child at each node.
        
        int child= 0;
        if(root.left != null) child += root.left.data;
        if(root.right != null) child += root.right.data;
        if(child >= root.data) root.data = child;
        else{
            if(root.left != null) root.left.data = root.data;
            else if(root.right != null) root.right.data = root.data;
        }
        
        //go down to left() and right()
        
        changeTree(root.left);
        changeTree(root.right);
        //while coming back, sum up left and right and assign it to the root.
        // NOTE : in case of leaf node, do not update it.
        int tot=0;
        if(root.left!=null) tot+= root.left.data;
        if(root.right!=null) tot+= root.right.data;
        if(root.left!=null || root.right!=null) root.data = tot;
    }
 }


// My code | Efficient | JAVA | Recursion | 

public class Solution {
    public static void changeTree(BinaryTreeNode < Integer > root) {
        if(root == null) return;
        if(root.left!=null && root.data > root.left.data){
            root.left.data = root.data;
        }
        if(root.right!=null && root.data > root.right.data){
           root.right.data = root.data;
        }
        changeTree(root.left);
        changeTree(root.right);
        
        int tot=0;
        if(root.left!=null) tot+= root.left.data;
        if(root.right!=null) tot+= root.right.data;
        if(root.left!=null || root.right!=null) root.data = tot;
    }
 }

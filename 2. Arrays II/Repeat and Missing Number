public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] repeatedNumber(final int[] arr) {
        
        int n = arr.length;
        
        int xor1;
        int setBitNo;

        int i;

        int x  = 0;
        int y = 0;

        xor1 = arr[0];

        for (i = 1; i < arr.length; i++) {
            xor1 ^= arr[i];
        }

        for (i = 1; i <= n; i++) {
            xor1 ^= i;
        }

        setBitNo = xor1 & ~(xor1 - 1);

        for (i = 0; i < arr.length; i++) {
            if ((arr[i] & setBitNo) != 0) {
                x = x ^ arr[i];
            } else {
                y = y ^ arr[i];
            }
        }

        for (i = 1; i <= n; i++) {
            if ((i & setBitNo) != 0) {
                x = x ^ i;
            } else {
                y = y ^ i;
            }
        }
        
        boolean xRepeat = false;
        boolean yRepeat = false;
        for (i = 0; i < arr.length; i++) {
            if (arr[i] == x) {
                xRepeat = true;
                break;
            } else if (arr[i] == y) {
                yRepeat = true;
            }
        }
        
        int[] ans = new int[2];
        if (xRepeat) {
            ans[0] = x;
            ans[1] = y;
            return ans;
        } else if (yRepeat) {
            ans[0] = y;
            ans[1] = x;
            return ans;
        }
        
        return ans;
    }
}

-----------------------------  Better -  Faster ---------------------------------
ublic class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] repeatedNumber(final int[] A) {
        // int i=0;
        int []res = new int[2];
        int temp[] = new int[A.length+1];
        for(int i=0;i<A.length;i++) temp[A[i]]++;
        for(int i=1;i<temp.length;i++){
            if(temp[i]>1) res[0] = i;
            if(temp[i]==0) res[1] = i;
        }
        return res;
        // while(i<A.length){
        //     if(A[i]<A.length+1 && A[i]!=A[A[i]-1]){
        //         int temp = A[i];
        //         A[i] = A[A[i]-1];
        //         A[A[i]-1] = temp;
        //     }
        //     else i++;
        // }
        // for(i=0;i<A.length;i++){
        //     if(A[i]!=i+1) {
        //         res[0] = i;
        //         res[1] = i+1;
        //     }
        // }
        // return res;
    }
}

------------------------------ Lightweight ------------------------------
public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] repeatedNumber(final int[] A) {
        int xor = 0 ;

        for(int i =1 ;i<=A.length ;i++){
            xor ^= i ;
        }

        for(int i =0 ; i<A.length ;i++){
            xor ^= A[i] ;
        }

        int rmsb = xor & -xor ;

        int f = 0 ;
        int s = 0 ;

        for(int i =0 ;i<A.length ;i++ ){
            if((A[i]&rmsb)==0)
                f ^= A[i] ;
            else
                s ^= A[i] ;
        }

        for(int i = 1 ;i<=A.length ;i++ ){
            if((i&rmsb)==0)
                f ^= i ;
            else
                s ^= i ;
        }

        int[] arr = new int[2] ;

        int first = -1 ;

        for(int i = 0 ;i<A.length ;i++ ){
            if(A[i]==f)
            first = f ;
            if(A[i]==s)
            first = s ;
        }
        

        if(first==f){
            arr[0] = first ;
            arr[1] = s ;
            return arr ;
        }

        arr[0] = s ;
        arr[1] = f ;
        return arr ;       
    }
}

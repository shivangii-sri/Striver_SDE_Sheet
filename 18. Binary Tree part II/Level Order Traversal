//Level Orer Traversal - BFS - Breadth First Search
// Always uses a Queue
// TC = O(N)
// SC = O(N) for queue

class Solution {
    // Java SOlutoion - Iterative - Using a Queue
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();        
        if(root == null) return ans;        
        Queue<TreeNode> q = new LinkedList<TreeNode>();      
        q.offer(root);
        
        while(!q.isEmpty()){
            int len = q.size();
            List<Integer> level = new ArrayList<>();
            for(int i=0 ; i<len; i++){
                TreeNode temp = q.remove();
                level.add(temp.val);
                if(temp.left!=null) q.offer(temp.left);
                if(temp.right!=null) q.offer(temp.right);
            }
            ans.add(level);
        }
        return ans;
    }
}

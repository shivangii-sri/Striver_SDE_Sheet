Approach :
1. Firstly we flatten last two lists, merge them into a single list.
2. We return this single flattened list, and again repeat same.

// TC = O(N) | SC = O(1)


class GfG {
    Node flatten(Node root) { 
        //Write Code here
      	
        if(root == null || root.next == null) return root;
        //recur for list in right 
        root.next = flatten(root.next);
        //now merge
        root = mergeList( root , root.next);
        return root;
    }
    
    private static Node mergeList(Node a, Node b){
        Node temp = new Node(0);
        Node res = temp;
        
        while(a != null && b != null){
            if(a.data < b.data){
                temp.bottom = a;
                temp = temp.bottom;
                a = a.bottom;
            }
            else{
                temp.bottom = b;
                temp = temp.bottom;
                b = b.bottom;
            }
        }
        if(a != null) temp.bottom = a;
        else temp.bottom = b;
        return res.bottom;
    }
}


